language: android

env:
 global:
 - ANDROID_HOME=$HOME/android-sdk
 - ANDROID_API=28
 - EMULATOR_API=28
 - ANDROID_BUILD_TOOLS=28.0.3
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS

    # The SDK version used to compile your project
    - android-$ANDROID_API

    # Additional components
    # - extra-google-google_play_services
    # - extra-google-m2repository
    # - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-x86-android-$ANDROID_API
    # - sys-img-armeabi-v7a-android-17
  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+

jdk: oraclejdk8

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

install:
  # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
  # Latest version available here: https://developer.android.com/studio/#command-tools
  - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
  - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk

  # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platform-tools' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'build-tools;28.0.3' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-28' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null
  
before_install:
  - yes | sdkmanager "platforms;android-28"
  - chmod +x gradlew

script: ./gradlew --no-daemon --parallel lintDebug testDebug
